name: EKS-CI-Scenario4

on:
  schedule:
    - cron:  '0 6 * * *'
  workflow_dispatch:
    inputs:
      aws_id:
        description: "AWS_ACCESS_KEY_ID"
        required: false
        default: ""
      aws_key:
        description: "AWS_SECRET_ACCESS_KEY"
        required: false
        default: ""
      aws_domain:
        description: "AWS_DOMAIN to use, managed via Route53's AWS_ZONE_ID"
        required: false
        default: ""
      aws_zone_id:
        description: "AWS_ZONE_ID"
        required: false
        default: ""
      keep_cluster:
        description: "Keep the cluster afterwards? (empty/yes)"
        required: false
        default: ""

env:
  SETUP_GO_VERSION: '^1.13.7'
  GINKGO_NODES: 1

jobs:
  acceptance-scenario4:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get All Git Tags
        run: git fetch --force --prune --unshallow --tags

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.SETUP_GO_VERSION }}
      - name: Setup Ginkgo Test Framework
        run: go install github.com/onsi/ginkgo/ginkgo@v1.16.2
      - name: Install Dependencies
        run: |
          brew install kubernetes-cli eksctl

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ github.event.inputs.aws_id || secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ github.event.inputs.aws_key || secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Create EKS cluster
        id: create-cluster
        run: |
          id=$RANDOM
          echo '::set-output name=ID::'$id
          eksctl create cluster --name=epinio-ci$id --region=us-east-2 --nodes=2 --node-type=t3.xlarge --node-volume-size=40 --managed --kubeconfig=kubeconfig-epinio-ci

      - name: Installation Acceptance Tests
        env:
          REGEX: Scenario4
          REGISTRY_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
          AWS_ZONE_ID: ${{ github.events.inputs.aws_zone_id || secrets.AWS_ZONE_ID }}
          AWS_DOMAIN: ${{ github.events.inputs.aks_domain || secrets.AWS_DOMAIN }}
          EPINIO_TIMEOUT_MULTIPLIER: 3
        run: |
          export KUBECONFIG=$PWD/kubeconfig-epinio-ci
          make test-acceptance-install

      - name: Delete EKS cluster
        # We always tear down the cluster, to avoid costs. Except when running
        # manually and keep_cluster was set to a non-empty string, like "yes"
        # TODO this was not called, when scheduled and tests failed
        if: ${{ always() && !github.event.inputs.keep_cluster }}
        env:
          KUBECONFIG: kubeconfig-epinio-ci
        run: |
          echo "debug keep_cluster: ${{ github.event.inputs.keep_cluster }}"
          id="${{ steps.create-cluster.outputs.ID }}"
          eksctl delete cluster --region=us-east-2 --name=epinio-ci$id
